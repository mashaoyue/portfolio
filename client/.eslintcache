[{"D:\\unsw\\career\\ralphma_cv\\client\\src\\index.tsx":"1","D:\\unsw\\career\\ralphma_cv\\client\\src\\App.tsx":"2","D:\\unsw\\career\\ralphma_cv\\client\\src\\Name.tsx":"3","D:\\unsw\\career\\ralphma_cv\\client\\src\\Resume.tsx":"4","D:\\unsw\\career\\ralphma_cv\\client\\src\\UserBar.tsx":"5"},{"size":412,"mtime":1608087492424,"results":"6","hashOfConfig":"7"},{"size":494,"mtime":1608471060869,"results":"8","hashOfConfig":"7"},{"size":1867,"mtime":1608610471567,"results":"9","hashOfConfig":"7"},{"size":8363,"mtime":1608612949013,"results":"10","hashOfConfig":"7"},{"size":6964,"mtime":1608528155877,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"12elbe2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"D:\\unsw\\career\\ralphma_cv\\client\\src\\index.tsx",[],["24","25"],"D:\\unsw\\career\\ralphma_cv\\client\\src\\App.tsx",[],"D:\\unsw\\career\\ralphma_cv\\client\\src\\Name.tsx",[],"D:\\unsw\\career\\ralphma_cv\\client\\src\\Resume.tsx",[],"D:\\unsw\\career\\ralphma_cv\\client\\src\\UserBar.tsx",["26"],"import React from \"react\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport './styles/User_bar.css'\r\n\r\nconst urls = [\r\n    {\r\n        \"id\": \"ava0\",\r\n        \"url\": '/images/ava/ava1.png'\r\n    },\r\n    {\r\n        \"id\": \"ava1\",\r\n        \"url\": '/images/ava/ava2.jpg'\r\n    },\r\n    {\r\n        \"id\": \"ava2\",\r\n        \"url\": '/images/ava/ava3.png'\r\n    },\r\n]\r\n\r\n\r\nconst UserBar = ()=>{\r\n    const [openWechat, setOpenWechat] = React.useState(false);\r\n    const [avaScrollBlock, setAvaScrollBlock] = React.useState(false);\r\n    const [showAvaId, setShowAvaId] = React.useState(0);\r\n    const [imgUrl, setImgUrl] = React.useState(urls);\r\n    const calendarContainerRef = React.useRef<HTMLDivElement>(null);\r\n    // const []\r\n    const [refill, setRefill] = React.useState(false);\r\n    const avaScrollTimerId = React.useRef<NodeJS.Timeout|null>(null);\r\n    const handleOpenWechat = ()=>{\r\n        setOpenWechat(true);\r\n    }\r\n\r\n    const handleCloseWechat = ()=>{\r\n        setOpenWechat(false);\r\n    }\r\n\r\n    // setInterval(()=>{\r\n    //     const element = document.getElementById(showAvaId.toString());\r\n    //     if(element){\r\n    //         let topPos = element.offsetTop;\r\n    //         if(calendarContainerRef.current){\r\n    //             calendarContainerRef.current.scrollTo({behavior:\"smooth\", top:topPos});\r\n    //         }\r\n    //     }\r\n    //     setShowAvaId(showAvaId + 1);\r\n    //     console.log(showAvaId);\r\n        \r\n    // }, 5000)\r\n\r\n    const handleOnClickScroll = ()=>{\r\n        setAvaScrollBlock(true);\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        avaScrollTimerId.current = setTimeout(()=>{setAvaScrollBlock(true)},8000)\r\n        return ()=>{\r\n            if(avaScrollTimerId.current)\r\n            clearInterval(avaScrollTimerId.current);\r\n        };\r\n    }, [])\r\n\r\n    // React.useEffect(()=>{\r\n    //     prevScrollY.current = setInterval(()=>{\r\n    //         setAvaScrollBlock(true);\r\n    //     }, 8000);\r\n    //     return ()=>{clearInterval(scrollIntervalId)};\r\n    // },[])\r\n\r\n    React.useEffect(()=>{\r\n        if(avaScrollBlock){\r\n            setShowAvaId(c=>c>1?0:c+1);\r\n            setTimeout(()=>{\r\n                setAvaScrollBlock(false);\r\n            }, 1200)\r\n        }\r\n      \r\n    },[avaScrollBlock])\r\n\r\n    React.useEffect(\r\n        ()=>{\r\n            const _t = ()=>{\r\n                const element = document.getElementById(\"ava\" + showAvaId.toString());\r\n                if(element){\r\n                    let topPos = element.offsetTop;\r\n                    if(calendarContainerRef.current){\r\n                        calendarContainerRef.current.scrollTo({behavior:\"smooth\", top:topPos});\r\n                        if(\"ava\" + showAvaId.toString() === imgUrl[imgUrl.length-1].id){\r\n                            setTimeout(()=>{\r\n                                // if(calendarContainerRef.current)\r\n                                // calendarContainerRef.current.scrollTo({top:0});\r\n                                setRefill(true);\r\n                            }, 500);\r\n                            \r\n                            // setImgUrl(tmpUrls);\r\n                        }\r\n                    }\r\n                }\r\n                if(avaScrollTimerId.current){\r\n                    clearInterval(avaScrollTimerId.current);\r\n                    avaScrollTimerId.current = setTimeout(()=>{setAvaScrollBlock(true)},8000);   \r\n                }\r\n            }\r\n            _t();\r\n            \r\n        }\r\n\r\n    ,[showAvaId, imgUrl])\r\n\r\n    React.useEffect(()=>{\r\n        if(refill){\r\n            let tmpUrls = JSON.parse(JSON.stringify(imgUrl));\r\n            // tmpUrls.shift();\r\n            // tmpUrls.shift();\r\n            // setImgUrl(tmpUrls);\r\n            let toTop = tmpUrls.pop();\r\n            // let toTop = tmpUrls.pop();\r\n            if(toTop){\r\n                tmpUrls.unshift(toTop)\r\n                setImgUrl(tmpUrls);\r\n            }\r\n            if(calendarContainerRef.current){\r\n                calendarContainerRef.current.scrollTo({top:0})\r\n            };\r\n            setRefill(false);\r\n        }\r\n    },[refill])\r\n\r\n\r\n    return(\r\n        <div className=\"user_container\">\r\n            {/* <button onClick={handleOnClickScroll}>click</button> */}\r\n            <div className=\"next_ava_button\" onClick={handleOnClickScroll}></div>\r\n            <div className=\"user_img_container\">\r\n                <div ref={calendarContainerRef} className=\"user_img_div\">\r\n                    {imgUrl.map((item, index)=>(\r\n                        // <img id={item.id} key={item.id} className=\"user_img\" src={item.url} alt=\"avatar\"/>\r\n                        <div id={item.id} key={item.id} className=\"user_img\" style={{backgroundImage: `url('${item.url}')`}}></div>\r\n                    ))}\r\n                </div>\r\n                \r\n                <div className=\"icon_container\">\r\n                    <a href=\"https://twitter.com/ralph_ma_\" target=\"_blank\" rel=\"noreferrer\"><img style={{borderRadius: \"5px\"}} src={'/images/icons/twitter.svg'} alt=\"twitter\"/></a>\r\n                    <a href=\"mailto:ralphma9@gmail.com\"><img src={'/images/icons/gmail.png'} alt=\"gmail\"/></a>\r\n                    <img onClick={handleOpenWechat} src={'/images/icons/Wechat.png'} alt=\"wechat\"/>\r\n                    <a href=\"https://www.linkedin.com/in/ralph-ma\" target=\"_blank\" rel=\"noreferrer\"><img src={'/images/icons/linkedin.png'} alt=\"linkedin\"/></a>         \r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"self_intr\">\r\n                I am a passionate FullÂ­stack developer with a love of beautiful, performant, and secure web applications. \r\n            </div>\r\n\r\n            <div className=\"self_intr\">\r\n                You can email me with questions, feedback, or work inquiries at <a href={\"mailto:ralphma9@gmail.com\"}>ralphma9@gmail.com</a>.\r\n            </div>\r\n\r\n            <Dialog onClose={handleCloseWechat} open={openWechat}>\r\n                <MuiDialogTitle style={{padding:\"0px 5px\"}} id=\"wechat-dialog\">\r\n                    <div className=\"dialog_title_panel\">\r\n                        <IconButton aria-label=\"close\" className=\"wechatDialogCloseIcon\" onClick={handleCloseWechat}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className=\"dialog_title_wechat_id\">\r\n                        <strong>Wechat ID:</strong>&nbsp;primer12450\r\n                    </div>\r\n                </MuiDialogTitle>\r\n                <MuiDialogContent>\r\n                    <img className=\"dialog_img\" src={'/images/wechat_img.jpg'} alt=\"wechat_img\"/>\r\n                </MuiDialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserBar;",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":131,"column":7,"nodeType":"33","endLine":131,"endColumn":15,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'imgUrl'. Either include it or remove the dependency array.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [imgUrl, refill]",{"range":"40","text":"41"},[4304,4312],"[imgUrl, refill]"]